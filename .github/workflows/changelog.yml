name: Changelog workflow
on:
  workflow_dispatch:
    inputs:
      pr:
        description: 'Create changelog PR'
        required: true
        default: false
        type: boolean
      slack:
        description: 'Send Slack message'
        required: true
        default: false
        type: boolean
  schedule:
    # Run at midnight every weekday (update changelog PRs)
    - cron: '0 0 * * 1-5'
    # Run every first day of the month at midnight (create changelog PR)
    - cron: '0 0 1 * *'
    # Run on every Monday (send Slack message)
    - cron: '0 0 * * 1'
  issue_comment:
    types: [created]

jobs:
  create:
    name: Create changelog PR
    runs-on: ubuntu-latest
    if : ${{ github.event.inputs.pr == 'true' || github.event.schedule == '0 0 1 * *' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - run: npm i
      - name: Create changelog PR if not existing already
        run: |
          node scripts/changelog/createPr.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  slack:
    name: Slack summary
    runs-on: ubuntu-latest
    if : ${{ github.event.inputs.slack == 'true' || github.event.schedule == '0 0 * * 1' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - run: npm i
      - name: Notify Slack
        run: |
          node scripts/changelog/sendSlackMessage.js
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update:
    needs: create
    name: Update Changelogs
    if: github.event_name == "schedule" || github_event_name == "workflow_dispatch" || (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.issue.labels.*.name, 'changelog-update') && contains(github.event.comment.body, '/update-changelog'))
    runs-on: ubuntu-latest
    steps:
      - name: Setup Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - uses: actions/github-script@v6
        env:
          CHANGELOG_GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          retries: 3
          script: |
            import { execSync } from "child_process";
            const searchQuery =
              "repo:gitpod-io/website is:pr is:open sort:updated-desc label:changelog-update";

            console.log(searchQuery);
            const { search } = await octokit.graphql(
              `query {
              search(query: "${searchQuery}", type: ISSUE, first: 20) {
                edges {
                  node {
                    ... on PullRequest {
                      number
                      headRefName
                      url
                    }
                  }
                }
              }
            }`
            );

            const branches = search.edges.map((edge) => edge.node.headRefName);
            const originalBranch = execSync("git rev-parse --abbrev-ref HEAD")

            for (const branch of branches) {
              console.log(`Updating branch ${branch}`);
              execSync(`git fetch origin ${branch}`);
              execSync(`git checkout ${branch}`);
              execSync("npm i");
              execSync("node ./scripts/changelog");
              execSync(`git add .`);
              execSync(`git commit -m "update changelog"`);
              execSync(`git push origin ${branch}`);
            }

            execSync(`git checkout ${originalBranch}`);